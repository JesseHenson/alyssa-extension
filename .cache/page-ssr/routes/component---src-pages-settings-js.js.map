{"version":3,"file":"component---src-pages-settings-js.js","mappings":"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","sources":["webpack://cosmic-tab-coach-landing/./src/components/Layout.js","webpack://cosmic-tab-coach-landing/./src/pages/settings.js"],"sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Link } from 'gatsby'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Poppins:wght@300;400;500;600&display=swap');\n  \n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Inter', sans-serif;\n    line-height: 1.6;\n    color: #333;\n    overflow-x: hidden;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  button {\n    border: none;\n    background: none;\n    cursor: pointer;\n    font-family: inherit;\n  }\n\n  .cosmic-gradient {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  }\n\n  .nature-gradient {\n    background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);\n  }\n\n  .minimal-gradient {\n    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  }\n`\n\nconst LayoutContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Navigation = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  z-index: 1000;\n  padding: 1rem 2rem;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n`\n\nconst NavContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Logo = styled(Link)`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 700;\n  font-size: 1.3rem;\n  color: #667eea;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`\n\nconst NavLinks = styled.div`\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    gap: 1rem;\n  }\n`\n\nconst NavLink = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #667eea;\n  }\n`\n\nconst NavCTAButton = styled.a`\n  background: linear-gradient(45deg, #667eea, #764ba2);\n  color: white;\n  padding: 0.7rem 1.5rem;\n  border-radius: 25px;\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n  }\n\n  @media (max-width: 768px) {\n    padding: 0.6rem 1.2rem;\n    font-size: 0.8rem;\n  }\n`\n\nconst BackButton = styled.a`\n  position: fixed;\n  top: 2rem;\n  left: 2rem;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  z-index: 1000;\n  font-size: 0.9rem;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-2px);\n  }\n`\n\nconst MainContent = styled.main`\n  padding-top: ${props => props.hasNav ? '80px' : '0'};\n`\n\nconst Layout = ({ \n  children, \n  title = \"Cosmic Tab Coach\", \n  description = \"Transform every browser moment into a cosmic opportunity for growth, peace, and self-care\",\n  showBackButton = false,\n  showNav = false,\n  backLink = \"/\"\n}) => {\n  return (\n    <LayoutContainer>\n      <GlobalStyle />\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n      \n      {showNav && (\n        <Navigation>\n          <NavContainer>\n            <Logo to=\"/\">🌟 Cosmic Tab Coach</Logo>\n            <NavLinks>\n              <NavLink to=\"/demos\">Demos</NavLink>\n              <NavLink to=\"/roadmap\">Roadmap</NavLink>\n              <NavLink to=\"/cosmic-tab\">Try It</NavLink>\n              <NavCTAButton \n                href=\"https://chrome.google.com/webstore/detail/cosmic-tab-coach/placeholder\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n              >\n                Add to Chrome\n              </NavCTAButton>\n            </NavLinks>\n          </NavContainer>\n        </Navigation>\n      )}\n      \n      {showBackButton && !showNav && (\n        <BackButton href={backLink}>\n          ← Back\n        </BackButton>\n      )}\n      \n      <MainContent hasNav={showNav}>\n        {children}\n      </MainContent>\n    </LayoutContainer>\n  )\n}\n\nexport default Layout","import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '../components/Layout'\n\nconst Container = styled.div`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  min-height: 100vh;\n  padding: 2rem;\n  position: relative;\n  overflow: hidden;\n`\n\nconst BackButton = styled(Link)`\n  position: fixed;\n  top: 2rem;\n  left: 2rem;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 25px;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  z-index: 1000;\n  font-size: 0.9rem;\n  text-decoration: none;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-2px);\n  }\n`\n\nconst SettingsPanel = styled.div`\n  max-width: 800px;\n  margin: 4rem auto 2rem;\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  backdrop-filter: blur(20px);\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);\n`\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n`\n\nconst Title = styled.h1`\n  font-family: 'Poppins', sans-serif;\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 0.5rem;\n`\n\nconst Subtitle = styled.p`\n  color: #666;\n  font-size: 1rem;\n`\n\nconst Section = styled.div`\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #f0f0f0;\n\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n  }\n`\n\nconst SectionTitle = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  color: #333;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n`\n\nconst SettingRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  padding: 1rem;\n  background: #f8f9fa;\n  border-radius: 12px;\n`\n\nconst SettingLabel = styled.div`\n  flex: 1;\n`\n\nconst SettingName = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 0.2rem;\n`\n\nconst SettingDesc = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n`\n\nconst SettingControl = styled.div`\n  margin-left: 1rem;\n`\n\nconst Select = styled.select`\n  padding: 0.5rem 1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background: white;\n  font-size: 0.9rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`\n\nconst Toggle = styled.div`\n  position: relative;\n  width: 50px;\n  height: 24px;\n  background: ${props => props.checked ? '#667eea' : '#ddd'};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: ${props => props.checked ? '26px' : '2px'};\n    width: 20px;\n    height: 20px;\n    background: white;\n    border-radius: 50%;\n    transition: all 0.3s ease;\n  }\n`\n\nconst Slider = styled.input`\n  width: 100%;\n  height: 6px;\n  border-radius: 3px;\n  background: #ddd;\n  outline: none;\n  -webkit-appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #667eea;\n    cursor: pointer;\n  }\n\n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #667eea;\n    cursor: pointer;\n    border: none;\n  }\n`\n\nconst ThemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-top: 1rem;\n`\n\nconst ThemeOption = styled.div`\n  aspect-ratio: 16/9;\n  border-radius: 8px;\n  cursor: pointer;\n  position: relative;\n  border: 3px solid ${props => props.selected ? '#667eea' : 'transparent'};\n  transition: all 0.3s ease;\n\n  &.cosmic {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  }\n\n  &.nature {\n    background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);\n  }\n\n  &.minimal {\n    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  }\n\n  &.premium1 {\n    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n    opacity: 0.6;\n  }\n\n  &.premium2 {\n    background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n    opacity: 0.6;\n  }\n\n  &::after {\n    content: '${props => props.premium ? '⭐ Premium' : ''}';\n    position: absolute;\n    bottom: 0.2rem;\n    left: 0.2rem;\n    right: 0.2rem;\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    font-size: 0.7rem;\n    padding: 0.2rem 0.4rem;\n    border-radius: 4px;\n    text-align: center;\n    opacity: ${props => props.premium ? 1 : 0};\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  }\n`\n\nconst ThemeName = styled.div`\n  text-align: center;\n  margin-top: 0.5rem;\n  font-size: 0.8rem;\n  color: #666;\n`\n\nconst PremiumBanner = styled.div`\n  background: linear-gradient(45deg, #667eea, #764ba2);\n  color: white;\n  padding: 1rem;\n  border-radius: 12px;\n  text-align: center;\n  margin-top: 1rem;\n`\n\nconst UpgradeButton = styled(Link)`\n  display: inline-block;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 25px;\n  text-decoration: none;\n  margin-top: 1rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: translateY(-2px);\n  }\n`\n\nconst SettingsPage = () => {\n  const [settings, setSettings] = useState({\n    theme: 'cosmic',\n    frequency: '30',\n    textSize: '16',\n    personalizedContent: true,\n    animations: true,\n    notifications: false,\n    autoRefresh: true\n  })\n\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }))\n  }\n\n  return (\n    <Layout \n      title=\"Settings - Cosmic Tab Coach\"\n      description=\"Customize your cosmic affirmation experience with themes, frequency, and personalization options\"\n    >\n      <Container>\n        <BackButton to=\"/cosmic-tab\">← Back to New Tab</BackButton>\n        \n        <SettingsPanel>\n          <Header>\n            <Title>⚙️ Settings</Title>\n            <Subtitle>Customize your cosmic affirmation experience</Subtitle>\n          </Header>\n\n          <Section>\n            <SectionTitle>🎨 Appearance</SectionTitle>\n            \n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Theme</SettingName>\n                <SettingDesc>Choose your preferred cosmic theme</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Select \n                  value={settings.theme} \n                  onChange={(e) => updateSetting('theme', e.target.value)}\n                >\n                  <option value=\"cosmic\">Cosmic Calm</option>\n                  <option value=\"nature\">Nature Serenity</option>\n                  <option value=\"minimal\">Minimal Focus</option>\n                </Select>\n              </SettingControl>\n            </SettingRow>\n\n            <ThemeGrid>\n              <div>\n                <ThemeOption \n                  className=\"cosmic\" \n                  selected={settings.theme === 'cosmic'}\n                  onClick={() => updateSetting('theme', 'cosmic')}\n                />\n                <ThemeName>Cosmic Calm</ThemeName>\n              </div>\n              <div>\n                <ThemeOption \n                  className=\"nature\" \n                  selected={settings.theme === 'nature'}\n                  onClick={() => updateSetting('theme', 'nature')}\n                />\n                <ThemeName>Nature Serenity</ThemeName>\n              </div>\n              <div>\n                <ThemeOption \n                  className=\"minimal\" \n                  selected={settings.theme === 'minimal'}\n                  onClick={() => updateSetting('theme', 'minimal')}\n                />\n                <ThemeName>Minimal Focus</ThemeName>\n              </div>\n              <div>\n                <ThemeOption \n                  className=\"premium1\" \n                  premium\n                  onClick={() => {}}\n                />\n                <ThemeName>Sunset Bliss ⭐</ThemeName>\n              </div>\n              <div>\n                <ThemeOption \n                  className=\"premium2\" \n                  premium\n                  onClick={() => {}}\n                />\n                <ThemeName>Cotton Candy ⭐</ThemeName>\n              </div>\n            </ThemeGrid>\n\n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Text Size</SettingName>\n                <SettingDesc>Adjust affirmation text size: {settings.textSize}px</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Slider\n                  type=\"range\"\n                  min=\"12\"\n                  max=\"24\"\n                  value={settings.textSize}\n                  onChange={(e) => updateSetting('textSize', e.target.value)}\n                />\n              </SettingControl>\n            </SettingRow>\n\n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Animations</SettingName>\n                <SettingDesc>Enable cosmic animations and transitions</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Toggle \n                  checked={settings.animations}\n                  onClick={() => updateSetting('animations', !settings.animations)}\n                />\n              </SettingControl>\n            </SettingRow>\n          </Section>\n\n          <Section>\n            <SectionTitle>✨ Content</SectionTitle>\n            \n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Affirmation Frequency</SettingName>\n                <SettingDesc>How often to show new affirmations</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Select \n                  value={settings.frequency} \n                  onChange={(e) => updateSetting('frequency', e.target.value)}\n                >\n                  <option value=\"15\">Every 15 seconds</option>\n                  <option value=\"30\">Every 30 seconds</option>\n                  <option value=\"60\">Every minute</option>\n                  <option value=\"300\">Every 5 minutes</option>\n                  <option value=\"0\">Manual only</option>\n                </Select>\n              </SettingControl>\n            </SettingRow>\n\n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Personalized Content</SettingName>\n                <SettingDesc>AI learns your preferences for better affirmations</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Toggle \n                  checked={settings.personalizedContent}\n                  onClick={() => updateSetting('personalizedContent', !settings.personalizedContent)}\n                />\n              </SettingControl>\n            </SettingRow>\n\n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Auto-refresh</SettingName>\n                <SettingDesc>Automatically show new affirmation on tab focus</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Toggle \n                  checked={settings.autoRefresh}\n                  onClick={() => updateSetting('autoRefresh', !settings.autoRefresh)}\n                />\n              </SettingControl>\n            </SettingRow>\n          </Section>\n\n          <Section>\n            <SectionTitle>🔔 Notifications</SectionTitle>\n            \n            <SettingRow>\n              <SettingLabel>\n                <SettingName>Daily Reminders</SettingName>\n                <SettingDesc>Get gentle reminders for mindfulness breaks</SettingDesc>\n              </SettingLabel>\n              <SettingControl>\n                <Toggle \n                  checked={settings.notifications}\n                  onClick={() => updateSetting('notifications', !settings.notifications)}\n                />\n              </SettingControl>\n            </SettingRow>\n          </Section>\n\n          <PremiumBanner>\n            <h3>✨ Unlock Premium Features</h3>\n            <p>Get personalized AI content, exclusive themes, and advanced customization</p>\n            <UpgradeButton to=\"/upgrade\">Upgrade to Premium</UpgradeButton>\n          </PremiumBanner>\n        </SettingsPanel>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default SettingsPage"],"names":["React","Helmet","Link","styled","createGlobalStyle","GlobalStyle","LayoutContainer","div","withConfig","displayName","componentId","Navigation","nav","NavContainer","Logo","NavLinks","NavLink","NavCTAButton","a","BackButton","MainContent","main","props","hasNav","Layout","children","title","description","showBackButton","showNav","backLink","createElement","name","content","property","to","href","target","rel","useState","Container","SettingsPanel","Header","Title","h1","Subtitle","p","Section","SectionTitle","h3","SettingRow","SettingLabel","SettingName","SettingDesc","SettingControl","Select","select","Toggle","checked","Slider","input","ThemeGrid","ThemeOption","selected","premium","ThemeName","PremiumBanner","UpgradeButton","SettingsPage","settings","setSettings","theme","frequency","textSize","personalizedContent","animations","notifications","autoRefresh","updateSetting","key","value","prev","onChange","e","className","onClick","type","min","max"],"sourceRoot":""}